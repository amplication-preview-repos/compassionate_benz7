/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { EnumRoomCoinSide } from "./EnumRoomCoinSide";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { GameListRelationFilter } from "../../game/base/GameListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { EnumRoomStatus } from "./EnumRoomStatus";

@InputType()
class RoomWhereInput {
  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  betAmount?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumRoomCoinSide,
  })
  @IsEnum(EnumRoomCoinSide)
  @IsOptional()
  @Field(() => EnumRoomCoinSide, {
    nullable: true,
  })
  coinSide?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  creator?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => GameListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GameListRelationFilter)
  @IsOptional()
  @Field(() => GameListRelationFilter, {
    nullable: true,
  })
  games?: GameListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumRoomStatus,
  })
  @IsEnum(EnumRoomStatus)
  @IsOptional()
  @Field(() => EnumRoomStatus, {
    nullable: true,
  })
  status?: "Option1";
}

export { RoomWhereInput as RoomWhereInput };
